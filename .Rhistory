'555' <- 1
'555'
_555_ <- 1
scooby-doo <- 1
scooby-doo
dt1 <- as.Date("2012-07-22")
dt1
type(dt1)
str(dt1)
class(dt1)
my_int <- c(-1L)
class(my_int)
dt2 <- T
class(dt2)
class(iris)
typeof(iris)
x <- TRUE
class(x)
typeof(x)
?typeof
?class
my_char <- 'Hello, world'
my_num <- 3
my_int <- 12L
my_log <- F
typeof(my_char)
typeof(my_num)
typeof(my_int)
typeof(my_log)
typeof(my_num)
typeof(my_int)
typeof(my_log)
class(my_num)
class(my_char)
class(my_log)
class(my_char)
class(my_num)
class(my_int)
class(my_log)
typeof(my_num)
my_num <- 3.2
typeof(my_num)
my_num <- 3.2
typeof(my_num)
my_num <- 3.2
my_other_num <- 3
class(my_num)
class(my_other_num)
typeof(my_num)
typeof(my_other_num)
library(bookdown)
install.packages('bookdown')
?update.packages
?dplyr
??dplyr
help(package='installr')
help(package='dplyr')
help(package='installr')
library(installr)
install.packages('installr')
install.packages('updateR')
install.packages('devtools')
library(devtools)
library(devtools)
install_github('andreacirilloac/updateR')
#install.packages('devtools')
#library(devtools)
#install_github('andreacirilloac/updateR')
library(updateR)
#install.packages('devtools')
#library(devtools)
install_github('andreacirilloac/updateR')
remove.packages('rlang')
install.packages('rlang')
install.packages("rlang")
install.packages('rlang')
library(devtools)
install_github('andreacirilloac/updateR')
install_github('andreacirilloac/updateR',dependencies = TRUE)
# 2a. Assign the sum of 1 and 4 as a
a <- sum(1,4)
# 2b. Assign the square root of a as b
b <- sqrt(a)
# 2c. Assign b - 1 as d
d <- b - 1
# 2d. Is d greater than 2?
d > 2
# and load it into your session
library(psych)
3 * 5 + 6
2 / 2 - 7
2 - 3 / 7
str(3 * 5 + 6)
str(2 / 2 - 7)
wa! <- 1
'wa!' <- 1
'wa!'
a <- 1
abs(a)
install.packages("openxlsx")
update.packages()
x <- c(1, 4, 9, 16)
x[1:3]
browseVignettes(package = 'readxl')
browseVignettes(package = 'openxlsx')
browseVignettes(package = c('read'))
browseVignettes(package = c('readr'))
browseVignettes(package = c('readr', 'openxlsx'))
browseVignettes(package = c('readxl', 'openxlsx'))
browseVignettes(package = c('readxl', 'openxlsx'))
browseVignettes(package = 'openxlsx')
require(ggplot2)
wb <- createWorkbook()
library(openxlsx)
require(ggplot2)
wb <- createWorkbook()
## read historical prices from yahoo finance
ticker <- "CBA.AX"
csv.url <- paste("http://ichart.finance.yahoo.com/table.csv?s=",
ticker, "&a=01&b=9&c=2009&d=01&e=9&f=2014&g=d&ignore=.csv")
prices <- read.csv(url(csv.url), as.is = TRUE)
prices$Date <- as.Date(prices$Date)
require(ggplot2)
wb <- createWorkbook()
options("openxlsx.borderColour" = "#4F80BD")
options("openxlsx.borderStyle" = "thin")
modifyBaseFont(wb, fontSize = 10, fontName = "Arial Narrow")
addWorksheet(wb, sheetName = "Motor Trend Car Road Tests", gridLines = FALSE)
addWorksheet(wb, sheetName = "Iris", gridLines = FALSE)
freezePane(wb, sheet = 1, firstRow = TRUE, firstCol = TRUE) ## freeze first row and column
writeDataTable(wb, sheet = 1, x = mtcars,
colNames = TRUE, rowNames = TRUE,
tableStyle = "TableStyleLight9")
setColWidths(wb, sheet = 1, cols = "A", widths = 18)
writeDataTable(wb, sheet = 2, iris, startCol = "K", startRow = 2)
qplot(data=iris, x = Sepal.Length, y= Sepal.Width, colour = Species)
insertPlot(wb, 2, xy=c("B", 16)) ## insert plot at cell B16
means <- aggregate(x = iris[,-5], by = list(iris$Species), FUN = mean)
vars <- aggregate(x = iris[,-5], by = list(iris$Species), FUN = var)
saveWorkbook(wb, "basics.xlsx", overwrite = TRUE) ## save to working directory
addWorksheet(wb, sheetName = "TEST", gridLines = FALSE)
saveWorkbook(wb, "basics.xlsx", overwrite = TRUE) ## save to working directory
getwd
getwd()
install.packages('dprep')
install.packages('fdm2id')
library(fdm2id)
library(tidymodels)
install.packages('tidymodels')
names(iris)
lm_spec <-
linear_reg() %>%
set_engine('lm')
library(tidyverse)
library(tidymodels)
lm_spec <-
linear_reg() %>%
set_engine('lm')
names(iris)
lm_fit <- lm_spec %>%
fit(Sepal.Length ~ Sepal.Width, data = iris)
lm_fit
install.packages('readxl')
library(openxlsx)
library(tidyverse)
?split
iris_grouped <- split(iris, iris$Species)
iris_grouped
?map
map(iris_grouped, writeDataTable(.x))
library(tidyverse)
library(openxlsx)
map(iris_grouped, writeDataTable(x))
iris_split <- split(iris, iris$Species)
browseVignettes(package = openxlsx)
browseVignettes(package = 'openxlsx')
?write.xlsx
iris_split[[1]]
iris_split
names(iris_split)
paste0(names(iris_split)[1],'.xlsx')
iris_split <- split(iris, iris$Species)
ws_counter <- 1
for(ws in iris_split){
write.xlsx(ws, paste0(names(iris_splot)[ws_counter],'.xlsx', asTable = TRUE)
ws_counter <- ws_counter + 1
}
for(ws in iris_split){
write.xlsx(ws, paste0(names(iris_splot)[ws_counter],'.xlsx', asTable = TRUE)
ws_counter <- ws_counter + 1
}
for(ws in iris_split){
write.xlsx(ws, paste0(names(iris_splot)[ws_counter],'.xlsx', asTable = TRUE)
ws_counter <- ws_counter + 1}
for(ws in iris_split){
paste0(names(iris_splot)[ws_counter],'.xlsx')
ws_counter <- ws_counter + 1
}
for(ws in iris_split){
paste0(names(iris_split)[ws_counter],'.xlsx')
ws_counter <- ws_counter + 1
}
ws_counter
for(ws in iris_split){
print(paste0(names(iris_split)[ws_counter],'.xlsx'))
ws_counter <- ws_counter + 1
}
for(ws in iris_split){
print(paste0(names(iris_split)[ws_counter],'.xlsx'))
ws_counter <- ws_counter + 1
}
for(ws in iris_split){
print(paste0(names(iris_split)[ws_counter],'.xlsx'))
ws_counter <- ws_counter + 1
}
ws_counter <- 1
for(ws in iris_split){
print(paste0(names(iris_split)[ws_counter],'.xlsx'))
ws_counter <- ws_counter + 1
}
ws_counter <- 1
for(ws in iris_split){
write.xlsx(ws, paste0(names(iris_splot)[ws_counter],'.xlsx', asTable = TRUE))
ws_counter <- ws_counter + 1}
ws_counter <- 1
for(ws in iris_split){
write.xlsx(ws, paste0(names(iris_split)[ws_counter],'.xlsx', asTable = TRUE))
ws_counter <- ws_counter + 1}
getwd()
ws_counter <- 1
for(ws in iris_split){
write.xlsx(ws, (paste0(names(iris_split)[ws_counter],'.xlsx'), asTable = TRUE))
ws_counter <- ws_counter + 1}
ws_counter <- 1
for(ws in iris_split){
write.xlsx(ws, (paste0(names(iris_split)[ws_counter],'.xlsx'), asTable = TRUE)))
ws_counter <- ws_counter + 1}
ws_counter <- 1
for(ws in iris_split){
write.xlsx(ws, (paste0(names(iris_split)[ws_counter],'.xlsx'), asTable = TRUE)))
ws_counter <- ws_counter + 1}
ws_counter <- 1
for(ws in iris_split){
write.xlsx(ws, (paste0(names(iris_split)[ws_counter],'.xlsx'), asTable = TRUE)))
ws_counter <- ws_counter + 1}
?write.xlsx
ws_counter <- 1
for(ws in iris_split){
write.xlsx(ws, file = paste0(names(iris_split)[ws_counter],'.xlsx'),
asTable = TRUE
ws_counter <- ws_counter + 1}
for(ws in iris_split){
write.xlsx(ws, file = paste0(names(iris_split)[ws_counter],'.xlsx'), asTable = TRUE
ws_counter <- ws_counter + 1}
ws_counter <- 1
for(ws in iris_split){
write.xlsx(ws, file = paste0(names(iris_split)[ws_counter],'.xlsx'), asTable = TRUE)
ws_counter <- ws_counter + 1}
iris_split <- group_split(iris, Species)
iris_split
group_keys(iris_split)
group_keys(iris, Species)
library(glue)
for(ws in iris_split){
write.xlsx(ws, file = glue(group_keys(iris, Species),'.xlsx'), asTable = TRUE)
ws_counter <- ws_counter + 1}
for(ws in iris_split){
write.xlsx(ws, file = paste0(names(iris_split)[ws_counter],'.xlsx'), asTable = TRUE)
ws_counter <- ws_counter + 1}
for(ws in iris_split){
write.xlsx(ws, file = glue(group_keys(iris, Species),'.xlsx'), asTable = TRUE)}
for(ws in iris_split){
write.xlsx(ws, file = glue(group_keys(iris, Species),'.xlsx'), asTable = TRUE)}
browseVignettes(package = c('readxl', 'openxlsx'))
library(Ecdat)
names(Housing)
t.test(recroom ~ price, data = Housing)
t.test(price ~ recroom, data = Housing)
names(Housing)
t.test(price ~ fullbase, data = Housing)
t.test(price ~ garagepl, data = Housing)
t.test(price ~ recroom, data = Housing)
t.test(price ~ prefarea, data = Housing)
head(Housing)
t.test(price ~ fullbase, data = Housing)
t.test(price ~ driveway, data = Housing)
t.test(price ~ gashw, data = Housing)
head(Housing)
t.test(lotsize ~ airco, data = Housing)
t.test(lotsize ~ prefarea, data = Housing)
t.test(lotsize ~ recroom, data = Housing)
t.test(lotsize ~ driveway, data = Housing)
t.test(lotsize ~ fullbase, data = Housing)
library(ggplot2)
ggplot(data = Housing, aes(x = lotsize)) +
geom_histogram()
ggplot(data = Housing, aes(x = lotsize)) +
geom_histogram(aes(color = basement))
ggplot(data = Housing, aes(x = lotsize)) +
geom_histogram(aes(color = fullbase))
ggplot(data = Housing, aes(x = lotsize)) +
geom_histogram(aes(fill = fullbase))
library(psych)
describeBy(Housing, by = fullbase)
describeBy(Housing, group = fullbase)
describeBy(Housing, group = 'fullbase')
t.test(lotsize ~ prefarea, data = Housing)
t.test(lotsize ~ recroom, data = Housing)
t.test(lotsize ~ driveway, data = Housing)
t.test(lotsize ~ fullbase, data = Housing)
names(Housing)
setwd("~/GitHub/advancing-into-analytics-book")
# For importing and exploring data
library(tidyverse)
districts <- read_csv("datasets/star/districts.csv")
districts
glimpse(iris)
library(caret)
data(package = 'caret')
Sacramento
library(caret)
Sacramento
Sacramento
data(Sacramento)
Sacramento
library(Lahman)
Teams
data(package = 'Lahman')
library(nycflights13)
install.packages('nycflights13')
install.packages('fueleconomy')
data(package = "fueleconomy")
summary(vehicles)
library(nycflights13)
data(package = 'nycflights13')
weather
data('Teams')
head(Teams)
data(package = 'Lahman')
head(Parks)
Parks
# Call in the Parks data frame
data('Parks')
head(Parks)
write.csv(iris$Species, "C:/RFiles/iris_test.csv")
roster <- data.frame(
name = c('Jack', 'Jill', 'Billy', 'Susie', 'Johnny'),
height_in = c(72, 65, 68, 69, 66),
injured = c(FALSE, TRUE, FALSE, FALSE, TRUE))
write_csv(roster, 'roster.csv')
write_csv(roster, 'roster-output.csv')
write_csv(roster, 'output/roster-output.csv')
# Write roster data frame to csv
write_csv(roster, 'output/roster-output.csv')
library(writexl)
roster.xlsx
# Write roster data frame to xlsx
write_xlsx(roster, 'output/roster.xlsx')
library(fueleconomy))
library(fueleconomy)
data(package = 'fueleconomy')
vehicles
summary(vehicles)
library(nycflights13)
data(package = 'nycflights13')
summary(flights)
summary(airports)
str(airports)
weather[1:5, c(1,3,5)]
weather[1:5, c(4:7)]
my_strings <- c('Have', 'a', '"R"eally', 'nice', 'day')
my_strings
# 1a. Access the 1st and 4th elements
my_strings[c(1,4)]
# 1a. more exotic way ;)
my_strings[c(sqrt(1), 2^2)]
x <- c(1, 2, 3, 4)
y <- c(TRUE, FALSE, TRUE, FALSE)
z <- x * y
z
# install.packages('nycflights13')
data(package = 'nycflights13')
data("airports")
summary(airports)
weather_subset <- weather[10:12, 4:7]
library(tidyverse)
write_csv(weather_subset, 'weather_subset.csv')
library(writexl)
write_xlsx(weather_subset, 'weather_subset.xlsx')
str(my_numbers)
my_numbers <- c(5, 8, 2, 7)
is.vector(my_numbers)
str(my_numbers)
# For writing data to Excel
library(writexl)
# For summary statistics
library(psych)
# For reading in Excel files
library(readxl)
# For importing and exploring data
library(tidyverse)
# For writing data to Excel
library(writexl)
# For summary statistics
library(psych)
# For reading in Excel files
library(readxl)
# For importing and exploring data
library(tidyverse)
# For writing data to Excel
library(writexl)
# For summary statistics
library(psych)
# For reading in Excel files
library(readxl)
# For importing and exploring data
library(tidyverse)
# For writing data to Excel
library(writexl)
# Convert to upper case
upper('I love R')
# Convert to upper case
toupper('I love R')
# Import packages that we need
library(tidyverse)
library(psych)
# Read in the data, select only the columns we need
mpg <- read_csv("datasets/mpg/mpg.csv") %>%
select(mpg,weight,horsepower,origin,cylinders)
head(mpg)
# Descriptive statistics
describe(mpg)
# One-way frequency table of origin
table(mpg$origin)
# Two-way frequency table
table(mpg$origin, mpg$cylinders)
# Descriptive statistics by group
mpg %>%
select(mpg, origin) %>%
describeBy(group = 'origin')
# Histogram
ggplot(data = mpg,aes(x = mpg)) +
geom_histogram()
# Box plot
ggplot(data = mpg,aes(x = origin,y = mpg)) +
geom_boxplot()
# Facet histogram
ggplot(data = mpg,aes(x = mpg)) +
geom_histogram()+
facet_grid(~ origin)
# Is there a difference in mileage?
mpg_filtered <- filter(mpg, origin == 'USA' | origin == 'Europe')
# Dependent variable ~ independent variable
t.test(mpg ~ origin, data = mpg_filtered)
select(mpg, mpg:horsepower) %>%
cor()
select(mpg, mpg:horsepower) %>%
cor() %>%
pairs()
select(mpg, mpg:horsepower) %>%
pairs() %>%
cor() %>%
select(mpg, mpg:horsepower) %>%
pairs() %>%
cor() %>%
pairs(select(mpg, mpg:horsepower))
select(mpg, mpg:horsepower) %>%
pairs() %>%
cor() %>%
# Import packages that we need
library(tidyverse)
library(psych)
# Read in the data, select only the columns we need
mpg <- read_csv("datasets/mpg/mpg.csv") %>%
select(mpg,weight,horsepower,origin,cylinders)
head(mpg)
# Descriptive statistics
describe(mpg)
# One-way frequency table of origin
table(mpg$origin)
# Two-way frequency table
table(mpg$origin, mpg$cylinders)
# Descriptive statistics by group
mpg %>%
select(mpg, origin) %>%
describeBy(group = 'origin')
# Histogram
ggplot(data = mpg,aes(x = mpg)) +
geom_histogram()
# Box plot
ggplot(data = mpg,aes(x = origin,y = mpg)) +
geom_boxplot()
# Facet histogram
ggplot(data = mpg,aes(x = mpg)) +
geom_histogram()+
facet_grid(~ origin)
# Is there a difference in mileage?
mpg_filtered <- filter(mpg, origin == 'USA' | origin == 'Europe')
# Dependent variable ~ independent variable
t.test(mpg ~ origin, data = mpg_filtered)
select(mpg, mpg:horsepower) %>%
pairs() %>%
cor() %>%
select(mpg, mpg:horsepower) %>%
pairs() %>%
cor()
select(mpg, mpg:horsepower) %>%
pairs() %>%
cor()
select(mpg, mpg:horsepower) %>%
pairs() %>%
cor()
