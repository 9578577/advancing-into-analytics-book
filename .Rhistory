star <- read_excel('datasets/star/star.xlsx')
star
star_pivot <- pivot_longer(data = star, cols = 'tmathssk':'treadssk',
names_to = 'test_type', values_to = 'score')
star_pivot
star_pivot <- mutate(test_type = recode(test_type, 'math' = 'tmathssk',
'reading' = 'treadssk'))
star_pivot <- star_pivot %>% mutate(test_type = recode(test_type, 'math' = 'tmathssk',
'reading' = 'treadssk'))
star_pivot
star_pivot <- star_pivot %>% mutate(test_type = recode(test_type,
'tmathssk' = 'math', 'treadssk' = 'reading'))
star_pivot
star_wide
star_wide <- star_long %>%
pivot_wider(names_from = 'test_type',
values_from = 'score')
star_wide
library(tidyverse)
library(readxl)
star <- read_excel('datasets/star/star.xlsx')
star
# https://rstudio-conf-2020.github.io/r-for-excel/tidying.html#tidyrpivot_longer-to-reshape-from-wider-to-longer-format
star_long <- pivot_longer(data = star, cols = 'tmathssk':'treadssk',
names_to = 'test_type', values_to = 'score')
star_long
# https://stackoverflow.com/questions/38088328/how-to-recode-and-reverse-code-variables-in-columns-with-dplyr
star_long <- star_long %>%
mutate(test_type = recode(test_type,
'tmathssk' = 'math', 'treadssk' = 'reading'))
star_long
star_wide <- star_long %>%
pivot_wider(names_from = 'test_type',
values_from = 'score')
star_wide
library(tidyverse)
library(readxl)
star <- read_excel('datasets/star/star.xlsx')
star
# https://rstudio-conf-2020.github.io/r-for-excel/tidying.html#tidyrpivot_longer-to-reshape-from-wider-to-longer-format
star_long <- pivot_longer(data = star, cols = 'tmathssk':'treadssk',
names_to = 'test_type', values_to = 'score')
star_long
# https://stackoverflow.com/questions/38088328/how-to-recode-and-reverse-code-variables-in-columns-with-dplyr
star_long <- star_long %>%
mutate(test_type = recode(test_type,
'tmathssk' = 'math', 'treadssk' = 'reading'))
star_long
star_wide <- star_long %>%
pivot_wider(names_from = 'test_type',
values_from = 'score')
library(tidyverse)
library(readxl)
star <- read_excel('datasets/star/star.xlsx')
star
# https://rstudio-conf-2020.github.io/r-for-excel/tidying.html#tidyrpivot_longer-to-reshape-from-wider-to-longer-format
star_long <- pivot_longer(data = star, cols = 'tmathssk':'treadssk',
names_to = 'test_type', values_to = 'score')
star_long
# https://stackoverflow.com/questions/38088328/how-to-recode-and-reverse-code-variables-in-columns-with-dplyr
star_long <- star_long %>%
mutate(test_type = recode(test_type,
'tmathssk' = 'math', 'treadssk' = 'reading'))
star_long
star_wide <- pivot_wider(star_long, names_from = 'test_type',
values_from = 'score')
star_wide
library(tidyverse)
library(readxl)
star <- read_excel('datasets/star/star.xlsx')
star
# https://rstudio-conf-2020.github.io/r-for-excel/tidying.html#tidyrpivot_longer-to-reshape-from-wider-to-longer-format
star_long <- pivot_longer(data = star, cols = 'tmathssk':'treadssk',
names_to = 'test_type', values_to = 'score')
star_long
star_wide <- pivot_wider(star_long, names_from = 'test_type',
values_from = 'score')
star_wide <- star_long %>%
distinct() %>%
pivot_wider(names_from = 'test_type',
values_from = 'score')
star_wide
library(tidyverse)
library(readxl)
star <- read_excel('datasets/star/star.xlsx')
star
# https://rstudio-conf-2020.github.io/r-for-excel/tidying.html#tidyrpivot_longer-to-reshape-from-wider-to-longer-format
star_long <- pivot_longer(data = star, cols = 'tmathssk':'treadssk',
names_to = 'test_type', values_to = 'score')
star_long
# https://stackoverflow.com/questions/38088328/how-to-recode-and-reverse-code-variables-in-columns-with-dplyr
star_long <- star_long %>%
mutate(test_type = recode(test_type,
'tmathssk' = 'math', 'treadssk' = 'reading'))
star_long
star_wide <- star_long %>%
distinct() %>%
pivot_wider(names_from = 'test_type',
values_from = 'score')
pivot_wider(star_long, names_from = 'test_type', values_from = 'score')
library(tidyverse)
library(readxl)
star <- read_excel('datasets/star/star.xlsx')
star
# https://rstudio-conf-2020.github.io/r-for-excel/tidying.html#tidyrpivot_longer-to-reshape-from-wider-to-longer-format
star_long <- pivot_longer(data = select(star, c('schidkn', 'classk', 'tmathssk', 'treadssk')),
cols = 'tmathssk':'treadssk',
names_to = 'test_type', values_to = 'score')
star_long
star <- read_excel('datasets/star/star.xlsx')
star <- select(star, c('classk', 'schidkn', 'treadssk', 'tmathssk'))
library(tidyverse)
library(readxl)
star <- read_excel('datasets/star/star.xlsx')
star <- select(star, c('classk', 'schidkn', 'treadssk', 'tmathssk'))
star_long <- pivot_longer(data = star,
cols = 'tmathssk':'treadssk',
names_to = 'test_type', values_to = 'score')
star_long
# https://stackoverflow.com/questions/38088328/how-to-recode-and-reverse-code-variables-in-columns-with-dplyr
star_long <- star_long %>%
mutate(test_type = recode(test_type,
'tmathssk' = 'math', 'treadssk' = 'reading'))
star_long
pivot_wider(star_long, id_cols = c('schidkn','classk'),
names_from = 'test_type', values_from = 'score')
star_long
pivot_wider(star_long, id_cols = c('schidkn','classk'),
names_from = 'test_type', values_from = 'score')
star_long <- star_long %>%
mutate(test_type = recode(test_type,
'tmathssk' = 'math', 'treadssk' = 'reading')) %>%
mutate(row = row_number())
star_long
pivot_wider(star_long, id_cols = c('schidkn','classk'),
names_from = 'test_type', values_from = 'score')
pivot_wider(star_long,
names_from = 'test_type', values_from = 'score')
pivot_wider(star_long, names_from = 'test_type', values_from = 'score') %>%
select(-row)
pivot_wider(star_long, id_cols = row,
names_from = 'test_type', values_from = 'score')
pivot_wider(star_long, id_cols = row,
names_from = 'test_type', values_from = 'score')
star_long <- star_long %>%
mutate(test_type = recode(test_type,
'tmathssk' = 'math', 'treadssk' = 'reading')) %>%
mutate(row = row_number()) %>%
group_by(row)
star_long
pivot_wider(star_long, names_from = 'test_type', values_from = 'score')
# https://stackoverflow.com/questions/38088328/how-to-recode-and-reverse-code-variables-in-columns-with-dplyr
star_long <- star_long %>%
mutate(test_type = recode(test_type,
'tmathssk' = 'math', 'treadssk' = 'reading')) %>%
mutate(row = row_number())
library(tidyverse)
library(readxl)
star <- read_excel('datasets/star/star.xlsx')
star <- select(star, c('classk', 'schidkn', 'treadssk', 'tmathssk'))
# https://rstudio-conf-2020.github.io/r-for-excel/tidying.html#tidyrpivot_longer-to-reshape-from-wider-to-longer-format
star_long <- pivot_longer(data = star,
cols = 'tmathssk':'treadssk',
names_to = 'test_type', values_to = 'score')
star_long
# https://stackoverflow.com/questions/38088328/how-to-recode-and-reverse-code-variables-in-columns-with-dplyr
star_long <- star_long %>%
mutate(test_type = recode(test_type,
'tmathssk' = 'math', 'treadssk' = 'reading')) %>%
mutate(row = row_number())
star_long
pivot_wider(star_long, names_from = 'test_type', values_from = 'score')
pivot_wider(star_long, names_from = 'test_type', values_from = 'score') %>%
select(-row)
pivot_wider(star_long, names_from = 'test_type', values_from = 'score') %>%
select(-row)
star_long <- star_long %>%
mutate(test_type = recode(test_type,
'tmathssk' = 'math', 'treadssk' = 'reading')) %>%
mutate(row = row_number())
pivot_wider(star_long, names_from = 'test_type', values_from = 'score')
pivot_wider(id_cols = row, star_long, names_from = 'test_type', values_from = 'score')
pivot_wider(star_long, names_from = 'test_type', values_from = 'score',
names_repair = 'minimal')
library(tidyverse)
library(readxl)
star <- read_excel('datasets/star/star.xlsx')
star <- select(star, c('classk', 'schidkn', 'treadssk', 'tmathssk'))
# https://rstudio-conf-2020.github.io/r-for-excel/tidying.html#tidyrpivot_longer-to-reshape-from-wider-to-longer-format
star_long <- pivot_longer(data = star,
cols = 'tmathssk':'treadssk',
names_to = 'test_type', values_to = 'score')
star_long
# https://stackoverflow.com/questions/38088328/how-to-recode-and-reverse-code-variables-in-columns-with-dplyr
star_long <- star_long %>%
mutate(test_type = recode(test_type,
'tmathssk' = 'math', 'treadssk' = 'reading')) %>%
mutate(row = row_number())
star_long
pivot_wider(star_long, names_from = 'test_type', values_from = 'score',
names_repair = 'minimal')
star_long <- star_long %>%
mutate(test_type = recode(test_type,
'tmathssk' = 'math', 'treadssk' = 'reading'))
star_long
pivot_wider(star_long, names_from = 'test_type', values_from = 'score',
names_repair = 'minimal')
library(tidyverse)
library(readxl)
star <- read_excel('datasets/star/star.xlsx')
star <- select(star, c('classk', 'schidkn', 'treadssk', 'tmathssk'))
# https://rstudio-conf-2020.github.io/r-for-excel/tidying.html#tidyrpivot_longer-to-reshape-from-wider-to-longer-format
star_long <- pivot_longer(data = star,
cols = 'tmathssk':'treadssk',
names_to = 'test_type', values_to = 'score')
star_long
# https://stackoverflow.com/questions/38088328/how-to-recode-and-reverse-code-variables-in-columns-with-dplyr
star_long <- star_long %>%
mutate(test_type = recode(test_type,
'tmathssk' = 'math', 'treadssk' = 'reading'))
star_long
pivot_wider(star_long, names_from = 'test_type', values_from = 'score',
names_repair = 'minimal')
d <- structure(list(name = c("C Farolillo", "C Farolillo", "C Farolillo",
"C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo",
"C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo",
"C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo",
"C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo",
"C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo",
"C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo",
"C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo",
"C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo",
"C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo",
"C Farolillo", "C Farolillo", "C Farolillo", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica"), val = c(7, 3, 7, 13, 7,
9, 20, 19, 4, 5, 5, 2, 6, 6, 16, 13, 7, 6, 3, 3, 6, 10, 5, 3,
5, 3, 4, 4, 10, 11, 4, 13, 8, 2, 8, 10, 3, 10, 14, 4, 2, 4, 6,
6, 8, 8, 3, 3, 13, 10, 13, 32, 25, 31, 34, 26, 33, 35, 43, 22,
22, 21, 10, 33, 33, 48, 47, 27, 23, 11, 13, 25, 31, 20, 16, 10,
9, 23, 11, 23, 26, 16, 34, 17, 4, 24, 21, 10, 26, 32, 10, 5,
9, 19, 14, 27, 27, 10, 8, 28, 32, 25), time = structure(c(16911,
16912, 16913, 16914, 16915, 16916, 16917, 16918, 16919, 16920,
16921, 16922, 16923, 16923, 16924, 16925, 16926, 16927, 16928,
16929, 16930, 16931, 16932, 16933, 16934, 16935, 16936, 16937,
16938, 16939, 16940, 16941, 16942, 16943, 16944, 16945, 16946,
16947, 16948, 16949, 16950, 16951, 16952, 16953, 16954, 16955,
16956, 16957, 16958, 16959, 16960, 16911, 16912, 16913, 16914,
16915, 16916, 16917, 16918, 16919, 16920, 16921, 16922, 16923,
16923, 16924, 16925, 16926, 16927, 16928, 16929, 16930, 16931,
16932, 16933, 16934, 16935, 16936, 16937, 16938, 16939, 16940,
16941, 16942, 16943, 16944, 16945, 16946, 16947, 16948, 16949,
16950, 16951, 16952, 16953, 16954, 16955, 16956, 16957, 16958,
16959, 16960), class = "Date"), x1 = c(51.5, 56.3461538461538,
56.3, 57.8571428571429, 58.7096774193548, 58.9677419354839, 64.4615384615385,
61.9310344827586, 60.3214285714286, 59.4137931034483, 59.5806451612903,
57.3448275862069, 64.0333333333333, 64.0333333333333, 70.15625,
71.3636363636364, 62.8125, 56.4375, 56.4516129032258, 51.741935483871,
52.84375, 53.09375, 52.969696969697, 54, 54.3870967741936, 60.3870967741936,
64.4516129032258, 66.2903225806452, 68.2333333333333, 69.7741935483871,
70.5806451612903, 73.8275862068966, 72.8181818181818, 64.6764705882353,
64.4838709677419, 68.7741935483871, 62.1764705882353, 68.969696969697,
70.1935483870968, 59.6774193548387, 59.9677419354839, 63.125,
67.5882352941177, 71.4705882352941, 73.8529411764706, 76.1935483870968,
72.6451612903226, 76.0645161290323, 76.4193548387097, 81.7741935483871,
85.0645161290323, 51.5, 56.3461538461538, 56.3, 57.8571428571429,
58.7096774193548, 58.9677419354839, 64.4615384615385, 61.9310344827586,
60.3214285714286, 59.4137931034483, 59.5806451612903, 57.3448275862069,
64.0333333333333, 64.0333333333333, 70.15625, 71.3636363636364,
62.8125, 56.4375, 56.4516129032258, 51.741935483871, 52.84375,
53.09375, 52.969696969697, 54, 54.3870967741936, 60.3870967741936,
64.4516129032258, 66.2903225806452, 68.2333333333333, 69.7741935483871,
70.5806451612903, 73.8275862068966, 72.8181818181818, 64.6764705882353,
64.4838709677419, 68.7741935483871, 62.1764705882353, 68.969696969697,
70.1935483870968, 59.6774193548387, 59.9677419354839, 63.125,
67.5882352941177, 71.4705882352941, 73.8529411764706, 76.1935483870968,
72.6451612903226, 76.0645161290323, 76.4193548387097, 81.7741935483871,
85.0645161290323)), class = c("tbl_df", "tbl", "data.frame"), row.names = c(NA,
-102L))
d <- structure(list(name = c("C Farolillo", "C Farolillo", "C Farolillo",
"C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo",
"C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo",
"C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo",
"C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo",
"C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo",
"C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo",
"C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo",
"C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo",
"C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo", "C Farolillo",
"C Farolillo", "C Farolillo", "C Farolillo", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica", "Plaza Eliptica",
"Plaza Eliptica", "Plaza Eliptica"), val = c(7, 3, 7, 13, 7,
9, 20, 19, 4, 5, 5, 2, 6, 6, 16, 13, 7, 6, 3, 3, 6, 10, 5, 3,
5, 3, 4, 4, 10, 11, 4, 13, 8, 2, 8, 10, 3, 10, 14, 4, 2, 4, 6,
6, 8, 8, 3, 3, 13, 10, 13, 32, 25, 31, 34, 26, 33, 35, 43, 22,
22, 21, 10, 33, 33, 48, 47, 27, 23, 11, 13, 25, 31, 20, 16, 10,
9, 23, 11, 23, 26, 16, 34, 17, 4, 24, 21, 10, 26, 32, 10, 5,
9, 19, 14, 27, 27, 10, 8, 28, 32, 25), time = structure(c(16911,
16912, 16913, 16914, 16915, 16916, 16917, 16918, 16919, 16920,
16921, 16922, 16923, 16923, 16924, 16925, 16926, 16927, 16928,
16929, 16930, 16931, 16932, 16933, 16934, 16935, 16936, 16937,
16938, 16939, 16940, 16941, 16942, 16943, 16944, 16945, 16946,
16947, 16948, 16949, 16950, 16951, 16952, 16953, 16954, 16955,
16956, 16957, 16958, 16959, 16960, 16911, 16912, 16913, 16914,
16915, 16916, 16917, 16918, 16919, 16920, 16921, 16922, 16923,
16923, 16924, 16925, 16926, 16927, 16928, 16929, 16930, 16931,
16932, 16933, 16934, 16935, 16936, 16937, 16938, 16939, 16940,
16941, 16942, 16943, 16944, 16945, 16946, 16947, 16948, 16949,
16950, 16951, 16952, 16953, 16954, 16955, 16956, 16957, 16958,
16959, 16960), class = "Date"), x1 = c(51.5, 56.3461538461538,
56.3, 57.8571428571429, 58.7096774193548, 58.9677419354839, 64.4615384615385,
61.9310344827586, 60.3214285714286, 59.4137931034483, 59.5806451612903,
57.3448275862069, 64.0333333333333, 64.0333333333333, 70.15625,
71.3636363636364, 62.8125, 56.4375, 56.4516129032258, 51.741935483871,
52.84375, 53.09375, 52.969696969697, 54, 54.3870967741936, 60.3870967741936,
64.4516129032258, 66.2903225806452, 68.2333333333333, 69.7741935483871,
70.5806451612903, 73.8275862068966, 72.8181818181818, 64.6764705882353,
64.4838709677419, 68.7741935483871, 62.1764705882353, 68.969696969697,
70.1935483870968, 59.6774193548387, 59.9677419354839, 63.125,
67.5882352941177, 71.4705882352941, 73.8529411764706, 76.1935483870968,
72.6451612903226, 76.0645161290323, 76.4193548387097, 81.7741935483871,
85.0645161290323, 51.5, 56.3461538461538, 56.3, 57.8571428571429,
58.7096774193548, 58.9677419354839, 64.4615384615385, 61.9310344827586,
60.3214285714286, 59.4137931034483, 59.5806451612903, 57.3448275862069,
64.0333333333333, 64.0333333333333, 70.15625, 71.3636363636364,
62.8125, 56.4375, 56.4516129032258, 51.741935483871, 52.84375,
53.09375, 52.969696969697, 54, 54.3870967741936, 60.3870967741936,
64.4516129032258, 66.2903225806452, 68.2333333333333, 69.7741935483871,
70.5806451612903, 73.8275862068966, 72.8181818181818, 64.6764705882353,
64.4838709677419, 68.7741935483871, 62.1764705882353, 68.969696969697,
70.1935483870968, 59.6774193548387, 59.9677419354839, 63.125,
67.5882352941177, 71.4705882352941, 73.8529411764706, 76.1935483870968,
72.6451612903226, 76.0645161290323, 76.4193548387097, 81.7741935483871,
85.0645161290323)), class = c("tbl_df", "tbl", "data.frame"), row.names = c(NA,
-102L))
library(dplyr)
d %>%
group_by(name) %>%
mutate(row = row_number()) %>%
tidyr::pivot_wider(names_from = name, values_from = val) %>%
select(-row)
library(tidyverse)
library(readxl)
star <- read_excel('datasets/star/star.xlsx')
star <- select(star, c('classk', 'schidkn', 'treadssk', 'tmathssk'))
# https://rstudio-conf-2020.github.io/r-for-excel/tidying.html#tidyrpivot_longer-to-reshape-from-wider-to-longer-format
star_long <- pivot_longer(data = star,
cols = 'tmathssk':'treadssk',
names_to = 'test_type', values_to = 'score')
star_long
# https://stackoverflow.com/questions/38088328/how-to-recode-and-reverse-code-variables-in-columns-with-dplyr
star_long <- star_long %>%
mutate(test_type = recode(test_type,
'tmathssk' = 'math', 'treadssk' = 'reading')) %>%
mutate(row )
star_long
library(dplyr)
star_wide %>%
group_by(classk, schidkn) %>%
mutate(row = row_number()) %>%
pivot_wider(names_from = test_type, values_from = score) %>%
select(-row)
star_wide %>%
group_by(classk, schidkn) %>%
mutate(row = row_number()) %>%
pivot_wider(names_from = 'test_type', values_from = 'score') %>%
select(-row)
library(tidyverse)
library(readxl)
star <- read_excel('datasets/star/star.xlsx')
star <- select(star, c('classk', 'schidkn', 'treadssk', 'tmathssk'))
# https://rstudio-conf-2020.github.io/r-for-excel/tidying.html#tidyrpivot_longer-to-reshape-from-wider-to-longer-format
star_long <- pivot_longer(data = star,
cols = 'tmathssk':'treadssk',
names_to = 'test_type', values_to = 'score')
star_long
# https://stackoverflow.com/questions/38088328/how-to-recode-and-reverse-code-variables-in-columns-with-dplyr
star_long <- star_long %>%
mutate(test_type = recode(test_type,
'tmathssk' = 'math', 'treadssk' = 'reading')) %>%
mutate(row )
star_long
library(dplyr)
star_wide %>%
group_by(classk, schidkn) %>%
mutate(row = row_number()) %>%
pivot_wider(names_from = 'test_type', values_from = 'score') %>%
select(-row)
library(tidyverse)
library(readxl)
star <- read_excel('datasets/star/star.xlsx')
star <- select(star, c('classk', 'schidkn', 'treadssk', 'tmathssk'))
# https://rstudio-conf-2020.github.io/r-for-excel/tidying.html#tidyrpivot_longer-to-reshape-from-wider-to-longer-format
star_long <- pivot_longer(data = star,
cols = 'tmathssk':'treadssk',
names_to = 'test_type', values_to = 'score')
star_long
# https://stackoverflow.com/questions/38088328/how-to-recode-and-reverse-code-variables-in-columns-with-dplyr
star_long <- star_long %>%
mutate(test_type = recode(test_type,
'tmathssk' = 'math', 'treadssk' = 'reading')) %>%
mutate(row )
star_long
library(dplyr)
star_long %>%
group_by(classk, schidkn) %>%
mutate(row = row_number()) %>%
pivot_wider(names_from = 'test_type', values_from = 'score') %>%
select(-row)
star_long %>%
mutate(row = row_number()) %>%
pivot_wider(names_from = 'test_type', values_from = 'score') %>%
select(-row)
d
d %>%
mutate(row = row_number()) %>%
tidyr::pivot_wider(names_from = name, values_from = val) %>%
select(-row)
d %>%
group_by(name) %>%
mutate(row = row_number()) %>%
tidyr::pivot_wider(names_from = name, values_from = val) %>%
select(-row)
star_long %>%
mutate(row = row_number()) %>%
group_by(classk, schidkn) %>%
pivot_wider(names_from = 'test_type', values_from = 'score') %>%
select(-row)
star_long %>%
mutate(row = row_number()) %>%
group_by(classk, schidkn) %>%
pivot_wider(names_from = 'test_type', values_from = 'score') %>%
select(-row)
star_long %>%
mutate(row = row_number()) %>%
pivot_wider(names_from = 'test_type', values_from = 'score') %>%
select(-row)
star_long <- star_long %>%
mutate(test_type = recode(test_type,
'tmathssk' = 'math', 'treadssk' = 'reading')) %>%
mutate(row )
star_long
# https://stackoverflow.com/questions/38088328/how-to-recode-and-reverse-code-variables-in-columns-with-dplyr
star_long <- star_long %>%
mutate(test_type = recode(test_type,
'tmathssk' = 'math', 'treadssk' = 'reading')) %>%
mutate(row)
library(tidyverse)
library(readxl)
star <- read_excel('datasets/star/star.xlsx')
star <- select(star, c('classk', 'schidkn', 'treadssk', 'tmathssk'))
# https://rstudio-conf-2020.github.io/r-for-excel/tidying.html#tidyrpivot_longer-to-reshape-from-wider-to-longer-format
star_long <- pivot_longer(data = star,
cols = 'tmathssk':'treadssk',
names_to = 'test_type', values_to = 'score')
star_long
# https://stackoverflow.com/questions/38088328/how-to-recode-and-reverse-code-variables-in-columns-with-dplyr
star_long <- star_long %>%
mutate(test_type = recode(test_type,
'tmathssk' = 'math', 'treadssk' = 'reading')) %>%
mutate(row)
star_long
# https://stackoverflow.com/questions/38088328/how-to-recode-and-reverse-code-variables-in-columns-with-dplyr
star_long <- star_long %>%
mutate(test_type = recode(test_type,
'tmathssk' = 'math', 'treadssk' = 'reading'))
star_long
star_long %>%
mutate(row = row_number()) %>%
pivot_wider(names_from = 'test_type', values_from = 'score') %>%
select(-row)
star_long %>%
pivot_wider(names_from = 'test_type', values_from = 'score')
star_long %>%
group_by(schidkn, classk) %>%
mutate(row = row_number()) %>%
ungroup() %>%
pivot_wider(names_from = 'test_type', values_from = 'score') %>%
select(-row)
star_long %>%
group_by(schidkn, classk) %>%
mutate(row = row_number()) %>%
ungroup() %>%
pivot_wider(names_from = 'test_type', values_from = 'score') %>%
select(-row)
star_long %>%
group_by(schidkn, classk) %>%
mutate(row = row_number()) %>%
pivot_wider(names_from = 'test_type', values_from = 'score') %>%
select(-row)
