summarise(avg_height = mean(height))
People %>%
group_by(birthCountry) %>%
summarise(avg_height = mean(height))
People %>%
group_by(birthCountry) %>%
summarise(avg_height = mean(height))
People %>%
group_by(birthCountry) %>%
summarise(avg_height = mean(height)) %>%
order_by(avg_height)
People %>%
group_by(birthCountry) %>%
summarise(avg_height = mean(height)) %>%
arrange(avg_height)
People %>%
group_by(birthCountry) %>%
summarise(shortest_person = min(height)) %>%
arrange(shortest_person)
People %>%
group_by(birthCountry) %>%
summarise(avg_height = min(height)) %>%
order_by(avg_height)
write.csv(people, "C:/RFiles/people.csv")
people %>%
group_by(birthCountry) %>%
summarise(avg_height = min(height)) %>%
order_by(avg_height)
people <- People
people %>%
group_by(birthCountry) %>%
summarise(avg_height = min(height)) %>%
order_by(avg_height)
write.csv(people, "C:/RFiles/people.csv")
people <- read.csv("https://raw.githubusercontent.com/summerofgeorge/training-assets/master/baseball/people.csv")
people
people %>%
group_by(birthCountry) %>%
summarise(avg_height = min(height)) %>%
order_by(avg_height)
people <- read.csv("https://raw.githubusercontent.com/summerofgeorge/training-assets/master/baseball/people.csv")
people
people %>%
group_by(birthCountry) %>%
summarise(avg_height = min(height)) %>%
order_by(avg_height)
people <- read.csv("https://raw.githubusercontent.com/summerofgeorge/training-assets/master/baseball/people.csv")
people
people %>%
group_by(birthCountry) %>%
summarise(avg_height = min(height)) %>%
order_by(avg_height)
people <- read.csv("https://raw.githubusercontent.com/summerofgeorge/training-assets/master/baseball/people.csv")
people
people %>%
group_by(birthCountry) %>%
summarise(avg_height = min(height)) %>%
order_by(avg_height)
people %>%
group_by(birthCountry) %>%
summarise(avg_height = min(height)) %>%
order_by(avg_height)
library(Lahma)
library(Lahman)
library(Lahman)
People %>%
group_by(birthCountry) %>%
summarise(avg_height = min(height)) %>%
order_by(avg_height)
People %>%
group_by(birthCountry) %>%
summarise(avg_height = min(height)) %>%
order_by(avg_height)
people <- read.csv("https://raw.githubusercontent.com/summerofgeorge/training-assets/master/baseball/people.csv")
people
people %>%
group_by(birthCountry) %>%
summarise(avg_height = min(height)) %>%
order_by(avg_height)
People
people <- read.csv("https://raw.githubusercontent.com/summerofgeorge/training-assets/master/baseball/people.csv")
head(peopl)
head(people)
people %>%
group_by(birthCountry) %>%
summarise(avg_height = min(height)) %>%
order_by(avg_height)
people %>%
group_by(birthCountry) %>%
summarise(avg_height = avg(height)) %>%
order_by(avg_height)
people %>%
group_by(birthCountry) %>%
summarise(avg_height = mean(height)) %>%
order_by(avg_height)
people
people %>%
group_by(birthCountry) %>%
summarise(avg_height = mean(height)) %>%
arrange(avg_height)
people %>%
filter(birthYear > 1985)
people %>%
filter(birthYear > 1985) %>%
group_by(birthCountry) %>%
summarise(min_height = min(height)) %>%
arrange(min_height)
people %>%
filter(birthYear > 1985) %>%
group_by(birthCountry) %>%
summarise(min_height = min(height)) %>%
arrange(min_height)
people %>%
group_by(birthCountry) %>%
summarise(min_height = min(height)) %>%
arrange(min_height)
people %>% max(height)
people %>% select(height)
df <- data.frame(q1 = c("Strongly Disagree", "Agree", "Disagree", "Strongly Agree"),
q2 = c("Strongly Agree", "Agree", "Strongly Disagree", "Neither Agree nor Disagree"))
d
df
df <- data.frame(q1 = c("Strongly Disagree", "Agree", "Disagree", "Strongly Agree"),
q2 = c("Strongly Agree", "Agree", "Strongly Disagree", "Neither Agree nor Disagree"),
q3 = c("Neither Agree nor Disagree", "Strongly Agree", "Agree", "Disagree"))
df
df <- data.frame(q1 = c("Strongly Disagree", "Agree", "Disagree", "Strongly Agree"),
q2 = c("Strongly Agree", "Agree", "Strongly Disagree", "Neither Agree nor Disagree"),
q3 = c("Neither Agree nor Disagree", "Strongly Agree", "Agree", "Disagree"),
q4 = c("M", "F", "M", "F"))
df
df <- data.frame(q1 = c("Strongly Disagree", "Agree", "Disagree", "Strongly Agree"),
q2 = c("Strongly Agree", "Agree", "Strongly Disagree", "Neither Agree nor Disagree"),
q3 = c("Neither Agree nor Disagree", "Strongly Agree", "Agree", "Disagree"),
q4 = c("M", "F", "M", "F"))
factorise <- function(x) {
case_when(x %in% c("Strongly Disagree") ~ 1,
x %in% c("Disagree") ~ 2,
x %in% c("Neither Agree nor Disagree") ~ 3,
x %in% c("Agree") ~ 4,
x %in% c("Strongly Agree") ~ 5)
}
df %>% mutate_at(c("q1", "q2", "q3"), factorise)
library(dplyr)
df <- data.frame(q1 = c("Strongly Disagree", "Agree", "Disagree", "Strongly Agree"),
q2 = c("Strongly Agree", "Agree", "Strongly Disagree", "Neither Agree nor Disagree"),
q3 = c("Neither Agree nor Disagree", "Strongly Agree", "Agree", "Disagree"),
q4 = c("M", "F", "M", "F"))
factorise <- function(x) {
case_when(x %in% c("Strongly Disagree") ~ 1,
x %in% c("Disagree") ~ 2,
x %in% c("Neither Agree nor Disagree") ~ 3,
x %in% c("Agree") ~ 4,
x %in% c("Strongly Agree") ~ 5)
}
df %>% mutate_at(c("q1", "q2", "q3"), factorise)
df2 <- mutate_at(df2, c("q1", "q2", "q3"), factorise)
df2 <- mutate_at(df, c("q1", "q2", "q3"), factorise)
cor()
df2
cor(df2$q1:q3)
summary(df2)
table(df$q1)
table(df$q1, df$q4)
library(dplyr)
df <- data.frame(q1 = c("Strongly Disagree", "Agree", "Disagree", "Strongly Agree"),
q2 = c("Strongly Agree", "Agree", "Strongly Disagree", "Neither Agree nor Disagree"),
q3 = c("Neither Agree nor Disagree", "Strongly Agree", "Agree", "Disagree"),
q4 = c("M", "F", "M", "F"))
factorise <- function(x) {
case_when(x %in% c("Strongly Disagree") ~ 1,
x %in% c("Disagree") ~ 2,
x %in% c("Neither Agree nor Disagree") ~ 3,
x %in% c("Agree") ~ 4,
x %in% c("Strongly Agree") ~ 5)
}
df2 <- mutate_at(df, c("q1", "q2", "q3"), factorise)
# To calculate statistics on the 1-5 data
# I need the numeric-based Likert data
summary(df2)
# But for nicely labeled tables and graphs,
# I need the string-based Likert data
table(df$q1, df$q4)
# To calculate statistics on the 1-5 data
# I need the numeric-based Likert data
cor(df2$q1)
# To calculate statistics on the 1-5 data
# I need the numeric-based Likert data
cor(df2[c:-1])
df2[:-1]
df2[2]
df2[,1]
df2[,-1]
df2[,-4]
# To calculate statistics on the 1-5 data
# I need the numeric-based Likert data
cor(select(df2, -q4))
table(df$q1, df$q4)
table(df$q2, df$q4)
df$q1 <- as.factor(df$q1, levels = c("Strongly Disagree", "Disagree", "Neither Agree nor Disagree", "Agree", "Strongly Agree"))
# h/t https://stackoverflow.com/questions/38724850/converting-likert-data-to-numeric-across-a-data-frame
factorise <- function(x) {
case_when(x %in% c("Strongly Disagree") ~ 1,
x %in% c("Disagree") ~ 2,
x %in% c("Neither Agree nor Disagree") ~ 3,
x %in% c("Agree") ~ 4,
x %in% c("Strongly Agree") ~ 5)
}
df2 <- mutate_at(df, c("q1", "q2", "q3"), factorise)
# To calculate statistics on the 1-5 data
# I need the numeric-based Likert data
cor(select(df2, -q4))
# But for nicely labeled tables and graphs,
# I need the character-based Likert data
table(df$q1, df$q4)
library(dplyr)
df <- data.frame(q1 = c("Strongly Disagree", "Agree", "Disagree", "Strongly Agree"),
q2 = c("Strongly Agree", "Agree", "Strongly Disagree", "Neither Agree nor Disagree"),
q3 = c("Neither Agree nor Disagree", "Strongly Agree", "Agree", "Disagree"),
q4 = c("M", "F", "M", "F"))
# h/t https://stackoverflow.com/questions/38724850/converting-likert-data-to-numeric-across-a-data-frame
factorise <- function(x) {
case_when(x %in% c("Strongly Disagree") ~ 1,
x %in% c("Disagree") ~ 2,
x %in% c("Neither Agree nor Disagree") ~ 3,
x %in% c("Agree") ~ 4,
x %in% c("Strongly Agree") ~ 5)
}
df2 <- mutate_at(df, c("q1", "q2", "q3"), factorise)
# To calculate statistics on the 1-5 data
# I need the numeric-based Likert data
cor(select(df2, -q4))
library(dplyr)
# h/t https://stackoverflow.com/questions/38724850/converting-likert-data-to-numeric-across-a-data-frame
factorise <- function(x) {
case_when(x %in% c("Strongly Disagree") ~ 1,
x %in% c("Disagree") ~ 2,
x %in% c("Neither Agree nor Disagree") ~ 3,
x %in% c("Agree") ~ 4,
x %in% c("Strongly Agree") ~ 5)
}
df2 <- mutate_at(df, c("q1", "q2", "q3"), factorise)
# To calculate statistics on the 1-5 data
# I need the numeric-based Likert data
cor(select(df2, -q4))
library(Ecdat)
write.csv(Housing, "C:/RFiles/housing.csv")
library(Lahman)
write.csv(Master, "C:/RFiles/people.csv")
library(DAAG)
write.csv(ais, "C:/RFiles/ais.csv")
library(Ecdat)
Computers
Housing
library(Ecdat)
data(package = 'Ecdat')
Icecream
library(Ecdat)
data(package = 'Ecdat')
Somerville
Hstarts
write.csv(Hstarts, "C:/RFiles/hstarts.csv")
Gasoline
CRSPmon
Consumption
write.csv(Consumption, "C:/RFiles/consumption.csv")
head(Consumption)
library(Ecdat)
head(Consumption)
Consumption
head(Consumption)
head(Cigar)
Cigar
View(Cigar)
Mroz
head(Mroz)
head(Wages)
head(SP500)
head(MunExp)
MunExp
head(PSID)
head(ManufCost)
ManufCost
write.csv(ManufCost, "C:/RFiles/manufcost.csv")
Griliches
Airline
View(Airline)
Gasoline
write.csv(Gasoline, "C:/RFiles/gasoline.csv")
library(Ecdat)
View(Computers)
write.csv(Computers, "C:/RFiles/computers.csv")
data(package = 'Ecdat')
View(Males)
Gasoline
View(Clothing)
head(Cigar)
head(Diamond)
head(Fishing)
head(MCAS)
head(MunExp)
head(Workinghours)
head(Star)
head(Schooling)
head(Oil)
head(Car)
data(package = 'MASS')
head(geyser)
head(Geyser)
head(geyser)
library(MASS)
head(geyser)
head(cabbages)
head(immer)
head(quine)
head(muscle)
head(Rabbit)
head(cpus)
write.csv(cpus, "C:/RFiles/cpus.csv")
load("C:/Users/GeorgeM/Downloads/penguins.rda")
penguins
head(penguins)
write.csv(penguins, "C:/Rfiles/penguins.csv")
mpg <- read.csv("C:/RFiles/mpg.csv")
head(mpg)
mpg_r <- lm(mpg ~ weight + horsepower)
mpg_r <- lm(mpg ~ weight + horsepower, data = mpg)
cooks.distance(mpg_r)
View(cooks.distance(mpg_r))
max(cooks.distance(mpg_r))
data(package = 'Ecdat')
CRANpackages
library(Ecdat)
CRANpackages
Gasoline
head(Mofa)
UStaxWords
dim(UStaxWords)
StrikeNb
head(SP500)
write.csv(SP500, "C:/RFiles/sp500.csv")
data(package = 'Ecdat')
write.csv(CRSPMon, "C:/RFiles/crspmon.csv")
write.csv(CRSPmon, "C:/RFiles/crspmon.csv")
library(Ecdat)
write.csv(CRSPmon, "C:/RFiles/crspmon.csv")
View(RetSchool)
write.csv(iris, "C:/RFiles/iris.csv")
library(babynames)
install.packages("babynames")
library(babynames)
data(package = 'babynames')
head(babynames)
head(births)
head(applicants)
head(lifetables)
write.csv(applicants, "C:/RFiles/applicants.csv", row.names = FALSE)
write.csv(applicants, "C:/RFiles/applicants.csv", row.names = FALSE)
write.csv(babynames, "C:/RFiles/babynames.csv", row.names = FALSE)
write.csv(births, "C:/RFiles/births.csv", row.names = FALSE)
write.csv(lifetables, "C:/RFiles/lifetables.csv", row.names = FALSE)
library(babynames)
data(package = 'babynames')
abalone <- read.csv("C:/RFiles/abalone.csv")
mydata <- cor(abalone)
fit <- princomp(mydata, cor=TRUE)
abalone <- read.csv("C:/RFiles/abalone.csv")
abalone
head(abalone)
library(dplyr)
abalone <- read.csv("C:/RFiles/abalone.csv")
abalone <- select(abalone, -Sex)
mydata <- cor(abalone)
fit <- princomp(mydata, cor=TRUE)
summary(fit) # print variance accounted for
loadings(fit) # pc loadings
plot(fit,type="lines") # scree plot
fit$scores # the principal components
mpg <- read.csv("C:/RFiles/auto-mpg.csv")
head(mpg)
complete.cases(mpg)
mpg <- read.csv("C:/RFiles/auto-mpg.csv", na.strings = "?")
head(mpg)
complete.cases(mpg)
mpg <- mpg[complete.cases(mpg),]
dim(mpg)
head(mpg)
mpg_model <- lm(mpg ~ displacement + horsepower + weight + acceleration, data=mpg)
summary(mpg)
summary(mpg_model)
library(car)
vif(mpg_model)
library(Lahman)
data(package='Lahman')
data(AwardsPlayers)
head(AwardsPlayers)
?plot
## Simple quantiles/ECDF, see ecdf() {library(stats)} for a better one:
plot(x <- sort(rnorm(47)), type = "s", main = "plot(x, type = \"s\")")
points(x, cex = .5, col = "dark red")
ais <- read.csv("C:/RFiles/ais.csv")
## Simple quantiles/ECDF, see ecdf() {library(stats)} for a better one:
plot(x <- sort(rnorm(47)), type = "s", main = "plot(x, type = \"s\")")
points(x, cex = .5, col = "dark red")
library(Lahman)
library(Lahman)
write.csv(Master,"C:/RFiles/master.csv")
library(tidyverse)
names(Master)
Master %>% select(playerID,nameFirst,nameLast,weight,height)
people <- Master %>% select(playerID,nameFirst,nameLast,weight,height)
people <- people[complete.cases((people))]
people <- people[complete.cases((people)),]
dim(peopl)
dim(people)
dim(Master)
write.csv(people,"C:/RFiles/people.csv")
data(package='tidyverse')
data(package='ggplot2')
Midwest
library(tidyverse)
str_replace("Hello world", 'Hello', 'HELLO')
str_replace("R Project", 'r', '')
library(palmerpenguins)
install.packages('palmerpenguins')
library(palmerpenguins)
data(palmerpenguins)
library(palmerpenguins)
data(package = 'palmerpenguins')
head(penguins)
penguins <- complete.cases(penguins,)
penguins <- complete.cases(penguins)
dim(penguins)
penguins <- complete.cases(penguins[penguins,])
data(package = 'palmerpenguins')
head(penguins)
library(palmerpenguins)
data(package = 'palmerpenguins')
head(penguins)
library(palmerpenguins)
library(palmerpenguins)
p <- palmerpenguins[complete.cases(palmerpenguins),]
dim(p)
library(palmerpenguins)
p <- penguins[complete.cases(penguins),]
dim(p)
write.csv(p, "C:/Rfiles/penguins.csv")
dim(penguins)
library(Ecdat)
data(Star)
library(psych)
names(star)
names(Star)
describeBy(Star,freelunk)
describeBy(Star,'freelunk')
x <- 'hi'
str(x)
y <- 7
str(y)
xd <- as.Date("2012-07-27")
str(xd)
class(xd)
typeof(xd)
str(mtcars)
?str
library(penguins)
library(palmerpenguins)
data(package='palmerpenguins')
penguins
View(penguins)
library(tidyverse)
library(writexl)
library(palmerpenguins)
penguins_cleaned <- penguins %>% drop_na(R)
penguins_cleaned <- penguins %>% drop_na()
dim(penguins)
dim(penguins_cleaned)
write_xlsx(penguins_cleaned, "penguins.xlsx")
setwd("~/GitHub/advancing-into-analytics-book/datasets/penguins")
write_xlsx(penguins_cleaned, "penguins.xlsx")
library(readxl)
penguins <- read_xlsx("penguins.xlsx")
head(penguins)
# rcc by male versus female
ggplot(data=penguins, aes(x= sex, y= flipper_length_mm))+
geom_boxplot()
# flipper length by male versus female
ggplot(data = penguins, aes(x = sex, y = flipper_length_mm))+
geom_boxplot()
ggplot(data = penguins, aes(x = flipper_length_mm))+
geom_histogram()+
facet_grid(~ sex)
t.test(flipper_length_mm ~ sex, data = penguins)
head(penguins)
# Correlation
penguins %>% select(-c(species, island, sex, year)) %>% cor()
head(penguins)
ggplot(data = penguins, aes(x = year))+
geom_histogram()
# Height and weight scatterplot
ggplot(data = penguins, aes(x = flipper_length_mm, y = body_mass_g))+
geom_point()
# Linear regression
penguins_reg <- lm(body_mass_g ~ flipper_length_mm, data = penguins)
summary(penguins_reg)
# Linear regression
penguins_reg <- lm(body_mass_g ~ flipper_length_mm, data = penguins)
summary(penguins_reg)
# Bonus: visualize the regression
ggplot(data = penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(size = 2) +
geom_smooth(method = "lm")
